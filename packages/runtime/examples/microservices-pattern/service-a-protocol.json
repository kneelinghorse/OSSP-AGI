{
  "urn": "urn:proto:api:service-a/user-management@v1",
  "metadata": {
    "urn": "urn:proto:api:service-a/user-management@v1",
    "name": "User Management Service",
    "version": "1.0.0",
    "description": "User authentication and profile management API",
    "status": "approved",
    "created_at": "2025-01-09T00:00:00Z",
    "approved_at": "2025-01-09T00:00:00Z",
    "approved_by": "system"
  },
  "service": {
    "name": "user-management",
    "type": "api",
    "version": "1.0.0",
    "baseUrl": "https://api.service-a.com/v1",
    "protocol": "REST",
    "security": {
      "type": "oauth2",
      "flows": ["authorization_code", "client_credentials"]
    }
  },
  "api": {
    "openapi": "3.0.0",
    "info": {
      "title": "User Management API",
      "version": "1.0.0",
      "description": "User authentication and profile management"
    },
    "servers": [
      {
        "url": "https://api.service-a.com/v1",
        "description": "Production server"
      }
    ],
    "paths": {
      "/users": {
        "get": {
          "summary": "List users",
          "operationId": "listUsers",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": { "type": "integer", "default": 20 }
            }
          ],
          "responses": {
            "200": {
              "description": "List of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "users": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create user",
          "operationId": "createUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateUserRequest" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      },
      "/users/{userId}": {
        "get": {
          "summary": "Get user by ID",
          "operationId": "getUser",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "User details",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "email": { "type": "string", "format": "email" },
            "name": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" }
          },
          "required": ["id", "email", "name"]
        },
        "CreateUserRequest": {
          "type": "object",
          "properties": {
            "email": { "type": "string", "format": "email" },
            "name": { "type": "string" },
            "password": { "type": "string", "minLength": 8 }
          },
          "required": ["email", "name", "password"]
        }
      }
    }
  },
  "dependencies": [],
  "consumers": [
    {
      "name": "order-service",
      "description": "Order management service that needs user information",
      "endpoints": ["/users/{userId}"]
    }
  ]
}

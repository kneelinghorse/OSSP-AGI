{
  "urn": "urn:proto:api:observability/metrics-hub@v1",
  "metadata": {
    "urn": "urn:proto:api:observability/metrics-hub@v1",
    "name": "Observability Metrics Hub",
    "version": "1.0.0",
    "description": "Time-series metrics aggregation and querying service",
    "status": "approved",
    "created_at": "2025-01-09T00:00:00Z",
    "approved_at": "2025-01-09T00:00:00Z",
    "approved_by": "system"
  },
  "service": {
    "name": "metrics-hub",
    "type": "api",
    "version": "1.0.0",
    "baseUrl": "https://metrics.observability.com/v1",
    "protocol": "REST",
    "security": {
      "type": "api_key",
      "header": "X-API-Key"
    }
  },
  "api": {
    "openapi": "3.0.0",
    "info": {
      "title": "Observability Metrics Hub",
      "version": "1.0.0",
      "description": "Time-series metrics aggregation and querying"
    },
    "servers": [
      {
        "url": "https://metrics.observability.com/v1",
        "description": "Production server"
      }
    ],
    "paths": {
      "/metrics": {
        "get": {
          "summary": "Query metrics",
          "operationId": "queryMetrics",
          "parameters": [
            {
              "name": "metric",
              "in": "query",
              "schema": { "type": "string" },
              "description": "Metric name"
            },
            {
              "name": "startTime",
              "in": "query",
              "schema": { "type": "string", "format": "date-time" },
              "description": "Start time for query"
            },
            {
              "name": "endTime",
              "in": "query",
              "schema": { "type": "string", "format": "date-time" },
              "description": "End time for query"
            },
            {
              "name": "labels",
              "in": "query",
              "schema": { "type": "string" },
              "description": "Label filters (JSON format)"
            }
          ],
          "responses": {
            "200": {
              "description": "Metrics query results",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/MetricsQueryResponse" }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Ingest metrics",
          "operationId": "ingestMetrics",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MetricsIngestRequest" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Metrics ingested successfully",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/MetricsIngestResponse" }
                }
              }
            }
          }
        }
      },
      "/metrics/{metricName}": {
        "get": {
          "summary": "Get specific metric",
          "operationId": "getMetric",
          "parameters": [
            {
              "name": "metricName",
              "in": "path",
              "required": true,
              "schema": { "type": "string" }
            },
            {
              "name": "startTime",
              "in": "query",
              "schema": { "type": "string", "format": "date-time" }
            },
            {
              "name": "endTime",
              "in": "query",
              "schema": { "type": "string", "format": "date-time" }
            }
          ],
          "responses": {
            "200": {
              "description": "Metric data",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/MetricData" }
                }
              }
            }
          }
        }
      },
      "/alerts": {
        "get": {
          "summary": "List alerts",
          "operationId": "listAlerts",
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "schema": { "type": "string", "enum": ["active", "resolved", "suppressed"] }
            },
            {
              "name": "severity",
              "in": "query",
              "schema": { "type": "string", "enum": ["low", "medium", "high", "critical"] }
            }
          ],
          "responses": {
            "200": {
              "description": "List of alerts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "alerts": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Alert" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create alert",
          "operationId": "createAlert",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateAlertRequest" }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Alert created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Alert" }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "MetricsQueryResponse": {
          "type": "object",
          "properties": {
            "metrics": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/MetricData" }
            },
            "total": { "type": "integer" },
            "queryTime": { "type": "number" }
          }
        },
        "MetricsIngestRequest": {
          "type": "object",
          "properties": {
            "metrics": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/MetricPoint" }
            }
          },
          "required": ["metrics"]
        },
        "MetricsIngestResponse": {
          "type": "object",
          "properties": {
            "ingested": { "type": "integer" },
            "rejected": { "type": "integer" },
            "errors": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "MetricData": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "labels": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            },
            "points": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/MetricPoint" }
            }
          }
        },
        "MetricPoint": {
          "type": "object",
          "properties": {
            "timestamp": { "type": "string", "format": "date-time" },
            "value": { "type": "number" },
            "labels": {
              "type": "object",
              "additionalProperties": { "type": "string" }
            }
          },
          "required": ["timestamp", "value"]
        },
        "Alert": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "description": { "type": "string" },
            "severity": { "type": "string", "enum": ["low", "medium", "high", "critical"] },
            "status": { "type": "string", "enum": ["active", "resolved", "suppressed"] },
            "condition": { "type": "string" },
            "threshold": { "type": "number" },
            "createdAt": { "type": "string", "format": "date-time" },
            "updatedAt": { "type": "string", "format": "date-time" },
            "resolvedAt": { "type": "string", "format": "date-time" }
          },
          "required": ["id", "name", "severity", "status", "condition"]
        },
        "CreateAlertRequest": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "description": { "type": "string" },
            "severity": { "type": "string", "enum": ["low", "medium", "high", "critical"] },
            "condition": { "type": "string" },
            "threshold": { "type": "number" }
          },
          "required": ["name", "severity", "condition"]
        }
      }
    }
  },
  "dependencies": [
    {
      "urn": "urn:proto:event:observability/log-collector@v1",
      "description": "Log Collector for derived metrics",
      "channels": ["metrics.derived"]
    },
    {
      "urn": "urn:proto:event:observability/event-bus@v1",
      "description": "Event Bus for alert notifications",
      "channels": ["alerts.notifications"]
    }
  ],
  "consumers": [
    {
      "name": "log-collector",
      "description": "Log Collector that sends derived metrics",
      "endpoints": ["/metrics"]
    },
    {
      "name": "event-bus",
      "description": "Event Bus that publishes alert events",
      "endpoints": ["/alerts"]
    }
  ]
}
